<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012 SURFnet bv, The Netherlands

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd
    http://www.springframework.org/schema/security/oauth2
    http://www.springframework.org/schema/security/spring-security-oauth2.xsd">



    <security:http auto-config="true">
        <security:intercept-url pattern="/rest/**" access="ROLE_USER"/>
        <security:intercept-url pattern="/oauth/authorize" access="ROLE_USER"/>
        <security:custom-filter ref="oauth2ProviderFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
    </security:http>

    <oauth:authorization-server
            client-details-service-ref="clientDetailsService"
            token-services-ref="tokenServices">
        <oauth:authorization-code disabled="true" />
    </oauth:authorization-server>

    <oauth:client-details-service id="clientDetailsService">
        <oauth:client client-id="id" secret="secret" />
    </oauth:client-details-service>


    <oauth:resource-server id="oauth2ProviderFilter" token-services-ref="tokenServices" />

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.RandomValueTokenServices">
        <property name="tokenStore" ref="tokenStore" />
    </bean>
    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />


    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
                <security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>



    <context:component-scan base-package="nl.surfnet.coin.api" />


  <bean id="log4jInitialization"
    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
    <property name="targetMethod" value="initLogging" />
    <property name="arguments">
      <list>
        <value>classpath:log4j.xml</value>
        <value>5000</value>
      </list>
    </property>
  </bean>

    <bean id="mockPersonService" class="${personServiceClass}" />

  <bean id="localeResolver"
    class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <!-- Set the default Locale to English -->
    <property name="defaultLocale" value="en_EN" />
  </bean>
</beans>
