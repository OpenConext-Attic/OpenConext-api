<!--
  Copyright 2012 SURFnet bv, The Netherlands

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd
    http://www.springframework.org/schema/security/oauth2
    http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


  <http pattern="/oauth2/token" create-session="never" authentication-manager-ref="clientAuthenticationManager"
        xmlns="http://www.springframework.org/schema/security">
    <intercept-url pattern="/oauth2/token" access="IS_AUTHENTICATED_FULLY"/>
    <anonymous enabled="false"/>
    <http-basic/>
    <!-- include this only if you need to authenticate clients via request parameters -->
    <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>
    <access-denied-handler ref="oauthAccessDeniedHandler"/>
  </http>

  <security:http auto-config="true" authentication-manager-ref="authenticationManager">
    <security:intercept-url pattern="/social/rest/**" access="ROLE_USER"/>
    <security:intercept-url pattern="/oauth/authorize" access="ROLE_USER"/>
    <security:custom-filter ref="oauth2ProviderFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
  </security:http>

  <bean id="approvalHandler" class="nl.surfnet.coin.api.ConextUserApprovalHandler"/>

  <bean id="clientCredentialsTokenEndpointFilter"
        class="org.springframework.security.oauth2.provider.filter.ClientCredentialsTokenEndpointFilter">
    <property name="authenticationManager" ref="clientAuthenticationManager"/>
  </bean>

  <authentication-manager alias="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
    <authentication-provider user-service-ref="clientDetailsUserService"/>
  </authentication-manager>

  <bean id="clientDetailsUserService"
        class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
    <constructor-arg ref="clientDetailsService"/>
  </bean>

  <bean id="oauthAccessDeniedHandler"
        class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAccessDeniedHandler"/>


  <oauth2:authorization-server
      user-approval-handler-ref="approvalHandler"
      client-details-service-ref="clientDetailsService"
      token-services-ref="tokenServices">
    <oauth2:authorization-code/>
    <oauth2:implicit/>
    <oauth2:client-credentials />
  </oauth2:authorization-server>


  <oauth2:resource-server id="oauth2ProviderFilter" token-services-ref="tokenServices"/>

  <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.RandomValueTokenServices">
    <property name="tokenStore" ref="tokenStore"/>
  </bean>
  <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/>

  <!-- TODO: be a SAML-SP using Shibboleth  -->
  <security:authentication-manager id="authenticationManager" alias="authenticationManager">
    <security:authentication-provider>
      <security:user-service id="enduserService">
        <security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN"/>
        <security:user name="bob" password="bobspassword" authorities="ROLE_USER"/>
      </security:user-service>
    </security:authentication-provider>
  </security:authentication-manager>

</beans>