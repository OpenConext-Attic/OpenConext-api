<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012 SURFnet bv, The Netherlands

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:oauth="http://www.springframework.org/schema/security/oauth"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
              http://www.springframework.org/schema/security/oauth http://www.springframework.org/schema/security/spring-security-oauth-1.0.xsd">

	<!-- All requests to /oauth/** are protected by this configuration. Invalid 
		requests are redirected to the samlEntryPoint. -->
	<http pattern="/oauth1/**" entry-point-ref="samlEntryPoint">
		<intercept-url pattern="/oauth1/**" access="ROLE_USER" />
	</http>

	<oauth:provider consumer-details-service-ref="janusClientDetailsService"
		token-services-ref="oauth1TokenServices" request-token-url="/oauth1/requestToken"
		authenticate-token-url="/oauth1/authorize" token-id-param="oauth_token"
		user-approval-url="/oauth1/confirm_access" access-token-url="/oauth1/accessToken"
		require10a="true" />

	<beans:bean id="preAuthProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<beans:property name="preAuthenticatedUserDetailsService">
			<beans:bean
				class="nl.surfnet.coin.api.oauth.ClientMetaDataPreAuthenticatedGrantedAuthoritiesUserDetailsService" />
		</beans:property>
	</beans:bean>



	<beans:bean id="authenticationDetailsSource"
		class="nl.surfnet.coin.api.oauth.ConextUserAuthenticationDetailsSource" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="preAuthProvider" />
	</authentication-manager>

	<beans:bean id="clientDetailsUserDetailsService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="janusClientDetailsService" />
	</beans:bean>

</beans:beans>
